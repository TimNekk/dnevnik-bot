import telebot
from telebot import types
import pickle
import os
import networking as nw

bot = telebot.TeleBot('983970585:AAHtqErypinRDlQ7mPlUVC_dgfZ085CAGFk')  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞


# ---------------------------------------------------------------
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
# ---------------------------------------------------------------


@bot.message_handler(commands=['start'])
def send_start_message(message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    users = get_users()
    if message.chat.id in users:
        user = users[message.chat.id]

        bot.send_message(message.chat.id, message.text)

    # –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    else:
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—Å—è
        user = {'login': '', 'password': '', 'pages': {}}
        add_user(user, message.chat.id)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ users.txt

        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∏–∫ –∏–ª–∏ –∏–º—è
        if message.from_user.first_name:
            text = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!'
        else:
            text = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}!'

        text += '\n–Ø - –î–Ω–µ–≤–Ω–∏–∫ –ë–æ—Ç üòÑ\n\n–ú–æ–∂–µ—à—å –≤–æ–π—Ç–∏ –≤ —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –∏–Ω–≤–∞–π—Ç-–∫–æ–¥'
        bot.send_message(message.chat.id, text, reply_markup=get_keyboard_new_user())


# ---------------------------------------------------------------
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Callback
# ---------------------------------------------------------------


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    # –í—Ö–æ–¥ –ø–æ –ª–æ–≥–∏–Ω—É
    if call.data == 'login':
        bot.delete_message(call.message.chat.id, call.message.message_id)  # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        get_user_login(call.message)  # –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏–Ω –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


# ---------------------------------------------------------------
# –û—Ç–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
# ---------------------------------------------------------------


def get_user_login(message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    text = '–í–≤–µ–¥–∏—Ç–µ *–õ–æ–≥–∏–Ω* _(—Ç–µ–ª–µ—Ñ–æ–Ω, email –∏–ª–∏ –°–ù–ò–õ–°)_'
    msg = bot.send_message(message.chat.id, text, reply_markup=get_cancel_keyboard(), parse_mode='Markdown')

    bot.register_next_step_handler(msg, get_user_password)


def get_user_password(message):
    # –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users = get_users()
    user = users[message.chat.id]

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    login = message.text
    user['login'] = login
    save_users(users)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    text = '–í–≤–µ–¥–∏—Ç–µ *–ü–∞—Ä–æ–ª—å*'
    msg = bot.send_message(message.chat.id, text, reply_markup=get_cancel_keyboard(), parse_mode='Markdown')

    bot.register_next_step_handler(msg, get_user_pages)


def get_user_pages(message):
    # –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    users = get_users()
    user = users[message.chat.id]

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    password = message.text
    user['password'] = password
    save_users(users)

    # –£–¥–∞–ª–µ–Ω–∏–µ 4 –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    for i in range(4):
        bot.delete_message(message.chat.id, message.message_id - i)

    pages = nw.get_diary_page(user['login'], user['password'])

    if pages:
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user['pages']['timetable'] = pages[0]
        user['pages']['marks'] = pages[1]
    else:
        print('–û—à–∏–±–∫–∞')


# ---------------------------------------------------------------
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# ---------------------------------------------------------------


def get_cancel_keyboard():
    keyboard = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
    keyboard.add(b1)
    return keyboard


def get_keyboard_new_user():
    keyboard = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='login')
    b2 = types.InlineKeyboardButton('–ò–Ω–≤–∞–π—Ç-–∫–æ–¥', callback_data='invite-code')
    keyboard.add(b1, b2)
    return keyboard


# ---------------------------------------------------------------
# –†–∞–±–æ—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
# ---------------------------------------------------------------


def save_users(users):
    with open('users.txt', 'wb') as file:
        pickle.dump(users, file)


def add_user(user, chat_id):
    with open('users.txt', 'rb') as file:
        users = pickle.load(file)

    users[chat_id] = user

    with open('users.txt', 'wb') as file:
        pickle.dump(users, file)


def get_users():
    with open('users.txt', 'rb') as file:
        users = pickle.load(file)
        return users


def reset_users_file():
    with open('users.txt', 'wb') as file:
        pickle.dump({}, file)
    print('users.txt reset')


if __name__ == '__main__':
    # –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ users.txt
    if os.path.getsize('users.txt') == 0:
        reset_users_file()

    reset_users_file()

    bot.skip_pending = True
    print('Bot started successfully')
    bot.polling(none_stop=True, interval=2)